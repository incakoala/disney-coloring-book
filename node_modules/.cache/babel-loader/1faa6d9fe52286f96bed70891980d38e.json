{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/showcase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from 'axios';\nimport ShowcaseImageCard from '../components/showcaseImageCard';\nimport { useHistory } from \"react-router-dom\";\nexport default function UserGallery() {\n  _s();\n\n  const [allImages, addAllImages] = useState([{}]);\n  const history = useHistory(); // Sources:\n  // https://uxdesign.cc/5-steps-to-create-a-simple-digital-coloring-book-in-react-3d4f5b2af822\n  // MERN Stack Tutorial with Auth (8 part series):\n  // https://www.youtube.com/watch?v=4_ZiJGY5F38\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      // uses get route to get all of the user images for a specific user with a public value of true\n      const response = await axios.get(\"http://localhost:5000/user_images/\");\n      addAllImages(response.data);\n    };\n\n    fetchItems();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artworks Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"image-gallery\",\n      children: allImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"btn-group\",\n        id: \"coloring\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"color-me\",\n          onClick: () => history.push('/imageGallery'),\n          children: \"Start coloring now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: allImages.map((image, i) => {\n          return /*#__PURE__*/_jsxDEV(ShowcaseImageCard, {\n            size: \"small\",\n            id: \"my-image-card\",\n            userImage: image\n          }, image._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserGallery, \"9ikzD+Cpo4Wpx2nNAVs36CMxQuQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserGallery\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/showcase.js"],"names":["React","useState","useEffect","useContext","useRef","axios","ShowcaseImageCard","useHistory","UserGallery","allImages","addAllImages","history","fetchItems","response","get","data","length","push","map","image","i","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AACA,QAAMU,OAAO,GAAGJ,UAAU,EAA1B,CAFkC,CAItC;AACA;AACA;AACA;;AAEIL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,UAAU,GAAG,YAAY;AAC3B;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACnB,oCADmB,CAAvB;AAGAJ,MAAAA,YAAY,CAACG,QAAQ,CAACE,IAAV,CAAZ;AACH,KAND;;AAOAH,IAAAA,UAAU;AACb,GATQ,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA,gBAEKH,SAAS,CAACO,MAAV,KAAqB,CAArB,gBACG;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAA,+BACI;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,MAAML,OAAO,CAACM,IAAR,CAAa,eAAb,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,gBAKG;AAAA,kBAEKR,SAAS,CAACS,GAAV,CAAc,CAACC,KAAD,EAAQC,CAAR,KAAc;AACzB,8BACI,QAAC,iBAAD;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,EAAE,EAAC,eAAnC;AAAmE,YAAA,SAAS,EAAED;AAA9E,aAAwDA,KAAK,CAACE,GAA9D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AAFL;AAPR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAsBH;;GA1CuBb,W;UAEJD,U;;;KAFIC,W","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from 'axios';\nimport ShowcaseImageCard from '../components/showcaseImageCard';\nimport { useHistory } from \"react-router-dom\";\nexport default function UserGallery() {\n    const [allImages, addAllImages] = useState([{}]);\n    const history = useHistory();\n\n// Sources:\n// https://uxdesign.cc/5-steps-to-create-a-simple-digital-coloring-book-in-react-3d4f5b2af822\n// MERN Stack Tutorial with Auth (8 part series):\n// https://www.youtube.com/watch?v=4_ZiJGY5F38\n\n    useEffect(() => {\n        const fetchItems = async () => {\n            // uses get route to get all of the user images for a specific user with a public value of true\n            const response = await axios.get(\n                \"http://localhost:5000/user_images/\"\n            );\n            addAllImages(response.data);\n        }\n        fetchItems();\n    })\n\n    return (\n        <>\n            <h1>Artworks Showcase</h1>\n            <div class=\"image-gallery\">\n                {/* if there are no images to showcase, a message is displayed */}\n                {allImages.length === 0 ?\n                    <div class=\"btn-group\" id=\"coloring\">\n                        <button class=\"color-me\" onClick={() => history.push('/imageGallery')}>Start coloring now!</button>\n                    </div>\n                    :\n                    <>\n                        {/* ELse, loop through all of the showcase images and pass the image object is and the image into the ShowcaseImageCard component */}\n                        {allImages.map((image, i) => {\n                            return (\n                                <ShowcaseImageCard size=\"small\" id=\"my-image-card\" key={image._id} userImage={image} />\n                            )\n                        })}\n                    </>\n                }\n            </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}