{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/signUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\";\nimport { ModalProvider, Modal } from \"./modal.js\";\nimport './login.css';\nexport default function SignUp() {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [error, setError] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const newUser = {\n        username,\n        password,\n        passwordCheck\n      };\n      await axios.post(\"http://localhost:5000/users/add\", newUser);\n      const loginRes = await axios.post(\"http://localhost:5000/users/login\", {\n        username,\n        password\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/home\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2\",\n        type: \"button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalOpen(false),\n        style: {\n          width: 400,\n          textAlign: \"center\"\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n          message: error,\n          clearError: () => setError(undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"register-password\",\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Verify password\",\n            required: true,\n            onChange: e => setPasswordCheck(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUp, \"kDERk5eyUl6rmJDsRX7300NCQ/A=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/signUp.js"],"names":["React","useState","useContext","UserContext","useHistory","axios","ErrorNotice","ModalProvider","Modal","SignUp","username","setUsername","password","setPassword","passwordCheck","setPasswordCheck","error","setError","isModalOpen","setIsModalOpen","setUserData","history","submit","e","preventDefault","newUser","post","loginRes","token","data","user","localStorage","setItem","push","err","response","msg","width","textAlign","undefined","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\";\nimport { ModalProvider, Modal } from \"./modal.js\";\nimport './login.css';\n\n  export default function SignUp(){\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [error, setError] = useState();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const {setUserData} = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n      e.preventDefault();\n\n      try{\n        const newUser = {username, password, passwordCheck};\n        await axios.post(\n        \"http://localhost:5000/users/add\", \n        newUser\n        );\n        const loginRes = await axios.post(\"http://localhost:5000/users/login\", {\n        username,\n        password,\n        });\n      setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/home\");\n      } catch(err){\n      err.response.data.msg && setError(err.response.data.msg);\n      }\n    };\n\n    return(\n    <>  \n      <ModalProvider>\n      \n      <button className=\"button2\" type=\"button\"   onClick={() => setIsModalOpen(true)}>\n       Sign up\n      </button>\n\n    {isModalOpen && (\n    <Modal onClose={() => setIsModalOpen(false)} style={{ width: 400, textAlign: \"center\" }} >\n    {error && (\n      <ErrorNotice message={error} clearError={() => setError(undefined)} />\n    )}\n    <form onSubmit={submit} >\n    <label>Username</label>\n    <input \n    type = \"text\" \n    required \n    onChange={(e) => setUsername(e.target.value)}\n    />\n\n    <label>Password</label>   \n    <input \n    id=\"register-password\" \n    type = \"password\" \n    required\n    onChange={(e) => setPassword(e.target.value)}\n    />\n      <input type = \"password\" \n    placeholder=\"Verify password\" \n    required\n    onChange={(e) => setPasswordCheck(e.target.value)}\n    />\n      <input type= \"submit\" value=\"Register\" />\n  \n    <br></br>  \n    </form>\n    </Modal>\n    )}    \n    </ModalProvider>\n    </>\n\n    )\n  } \n"]},"metadata":{},"sourceType":"module"}