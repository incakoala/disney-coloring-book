{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Stitch from \"../components/images/stitch.js\";\nimport Minnie from \"../components/images/minnie.js\";\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n  _s();\n\n  const [image, setImage] = useState({});\n  var ColorImage = useRef();\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    setImage(props.userImage);\n  }, [props]);\n\n  const deleteImage = async id => {\n    if (!userData.token) {\n      history.push(\"/\");\n      return;\n    }\n\n    swal({\n      title: \"Delete image?\",\n      text: \"This cannot be reversed.\",\n      buttons: true\n    }).then(async willDelete => {\n      if (willDelete) {\n        await axios.delete(`http://localhost:5000/user_images/${id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColoredInImage, {\n      component: image.component,\n      onFill: () => {},\n      fillColors: image.fill_colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), image.component === \"stitch\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ColoredInImage, {\n        component: image.component,\n        onFill: () => {},\n        fillColors: image.fill_colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/coloringpage/\" + image._id,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteImage(image._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), \" |\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/imageDownload/\" + image._id,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Hello\"\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n} // export default function UserImageCard(props) {\n//     let image = props.userImage\n//     console.log(image)\n//     // const history = useHistory();\n//     // const showFeatured = () => {\n//     //     history.push(`/featuredimage/${props.userImage.id}`)   \n//     // }\n//     return(\n//         <div className=\"image-card\">\n//             <h4>{image.component}</h4>\n//             {/* <div className=\"image-container\"> */}\n// <ColoredInImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/>\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} \n//         </div>\n//     )\n// }\n// import React, {useState, useEffect, useContext, useRef} from \"react\";\n// const {userData} = useContext(UserContext);\n// import { useHistory } from \"react-router-dom\";\n// // import ColoredInImage from \"./images/coloredInImage\";\n// import Stitch from \"../components/images/stitch.js\";\n// export default function UserImageCard(props) {\n//     let image = props.userImage\n//     console.log(image)\n//     // const history = useHistory();\n//     // const showFeatured = () => {\n//     //     history.push(`/featuredimage/${props.userImage.id}`)   \n//     // }\n//     const components = {\n//         \"stitch\": Stitch\n//     }\n//    const ColorImage = components[image.component]\n//     return(\n//         <div className=\"image-card\">\n//             {/* <h4>{image.component}</h4> */}\n//             {/* <div className=\"image-container\"> */}\n//                 <ColorImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/>\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} \n//         </div>\n//     )\n// }\n//             {/* <h4>{image.component}</h4> */}\n//             {/* <div className=\"image-container\"> */}\n// {/*             <button onClick={() => fetchItems()} >Get</button> */}\n// {/*             <ColorImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/> */}\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} \n\n_s(UserImageCard, \"c2e3K+fyjAZ+y9fXcY57mGXvFAU=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserImageCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserImageCard\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js"],"names":["React","useState","useEffect","useContext","useRef","useHistory","Link","UserContext","axios","swal","Stitch","Minnie","ColoredInImage","UserImageCard","props","image","setImage","ColorImage","userData","history","userImage","deleteImage","id","token","push","title","text","buttons","then","willDelete","delete","headers","component","fill_colors","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Stitch from \"../components/images/stitch.js\";\nimport Minnie from \"../components/images/minnie.js\";\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n    const [image, setImage] = useState({});\n    var ColorImage = useRef();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        setImage(props.userImage)\n    }, [props])\n\n    const deleteImage = async (id) => {\n        if (!userData.token) {\n            history.push(\"/\")\n            return\n        }\n        swal({\n            title: \"Delete image?\",\n            text: \"This cannot be reversed.\",\n            buttons: true\n        })\n        .then( async(willDelete) => {\n            if (willDelete) {\n                await axios.delete(\n                    `http://localhost:5000/user_images/${id}`,\n                    { headers: { \"x-auth-token\": userData.token } },\n                );  \n            }\n        });\n    }\n\n    return (\n        <div className=\"image-card\">\n            <div>\n                \n            </div>\n            <ColoredInImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors} />\n\n            {image.component === \"stitch\" ?\n            <div>\n                <ColoredInImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors} />\n                {/* <Stitch component={image.component} onFill={()=>{}} fillColors={image.fill_colors} /> */}\n                <Link to={\"/coloringpage/\"+image._id}>Edit</Link> | \n                <button onClick={() => deleteImage(image._id)}>Delete</button> |\n                <Link to={\"/imageDownload/\"+image._id}>Download</Link>\n            </div> :\n            <>Hello</>\n            }\n        </div>\n    )\n}\n\n\n// export default function UserImageCard(props) {\n\n//     let image = props.userImage\n//     console.log(image)\n//     // const history = useHistory();\n\n//     // const showFeatured = () => {\n//     //     history.push(`/featuredimage/${props.userImage.id}`)   \n//     // }\n\n\n//     return(\n//         <div className=\"image-card\">\n//             <h4>{image.component}</h4>\n//             {/* <div className=\"image-container\"> */}\n                // <ColoredInImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/>\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} \n//         </div>\n//     )\n\n// }\n\n\n// import React, {useState, useEffect, useContext, useRef} from \"react\";\n// const {userData} = useContext(UserContext);\n// import { useHistory } from \"react-router-dom\";\n// // import ColoredInImage from \"./images/coloredInImage\";\n// import Stitch from \"../components/images/stitch.js\";\n\n// export default function UserImageCard(props) {\n\n//     let image = props.userImage\n//     console.log(image)\n//     // const history = useHistory();\n\n//     // const showFeatured = () => {\n//     //     history.push(`/featuredimage/${props.userImage.id}`)   \n//     // }\n//     const components = {\n//         \"stitch\": Stitch\n//     }\n\n//    const ColorImage = components[image.component]\n\n//     return(\n//         <div className=\"image-card\">\n//             {/* <h4>{image.component}</h4> */}\n//             {/* <div className=\"image-container\"> */}\n//                 <ColorImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/>\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} \n//         </div>\n//     )\n\n// }\n\n\n//             {/* <h4>{image.component}</h4> */}\n//             {/* <div className=\"image-container\"> */}\n// {/*             <button onClick={() => fetchItems()} >Get</button> */}\n// {/*             <ColorImage component={image.component} onFill={()=>{}} fillColors={image.fill_colors}/> */}\n//             {/* </div>   */}\n//             {/* <button onClick={showFeatured}>View Image</button>  */} "]},"metadata":{},"sourceType":"module"}