{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userGallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios'; //import ImageCard from '../components/imageCard';\n\nimport UserImageCard from '../components/userImageCard'; // import { all } from \"../../backend/routes/image\";\n\nimport { useHistory } from \"react-router-dom\";\nexport default function UserGallery() {\n  _s();\n\n  const [allImages, addImage] = useState([{}]);\n  const {\n    userData\n  } = useContext(UserContext);\n  useEffect(() => {\n    const fetchItems = async () => {\n      const response = await axios.get(\"http://localhost:5000/user_images/all\", {\n        headers: {\n          \"x-auth-token\": userData.token\n        }\n      });\n      addImage(response.data); // console.log(allImages);\n    };\n\n    fetchItems();\n  });\n\n  const downloadImage = () => {\n    history.push(`/imageDownload/${image._id}`);\n  };\n\n  const deleteImage = async id => {\n    if (!userData.token) {\n      history.push(\"/\");\n      return;\n    }\n\n    swal({\n      title: \"Delete image?\",\n      text: \"This cannot be reversed.\",\n      buttons: true\n    }).then(async willDelete => {\n      if (willDelete) {\n        await axios.delete(`http://localhost:5000/user_images/${id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n      }\n    });\n  };\n\n  const editImage = () => {\n    history.push(`/coloringpage/${image._id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userData.user.username, \"'s Gallery\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"image-gallery\",\n      children: allImages.map((image, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(UserImageCard, {\n            size: \"small\",\n            userImage: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"btn-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"download\",\n              onClick: () => downloadImage(),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"delete\",\n              onClick: () => deleteImage(image._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"color-me\",\n              onClick: () => editImage(),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) // <div>\n  // <h1>{userData.user.username}'s Gallery</h1>\n  //     <div id=\"my-gallery\">\n  //         <div class=\"row\">\n  //             {allImages.map((image, i) => {\n  //                 return (\n  //                     <UserImageCard size=\"small\" userImage={image} />\n  //                 )\n  //             })}\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n}\n\n_s(UserGallery, \"WgDqO/7ro90CU3UnfaA+ex0ndVc=\");\n\n_c = UserGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserGallery\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userGallery.js"],"names":["React","useState","useEffect","useContext","useRef","UserContext","axios","UserImageCard","useHistory","UserGallery","allImages","addImage","userData","fetchItems","response","get","headers","token","data","downloadImage","history","push","image","_id","deleteImage","id","swal","title","text","buttons","then","willDelete","delete","editImage","user","username","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\n//import ImageCard from '../components/imageCard';\nimport UserImageCard from '../components/userImageCard';\n// import { all } from \"../../backend/routes/image\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UserGallery() {\n    const [allImages, addImage] = useState([{}]);\n    const { userData } = useContext(UserContext);\n\n    useEffect(() => {\n        const fetchItems = async () => {\n            const response = await axios.get(\n                \"http://localhost:5000/user_images/all\",\n                { headers: { \"x-auth-token\": userData.token } },\n            );\n            addImage(response.data);\n            // console.log(allImages);\n        }\n        fetchItems();\n    })\n\n    const downloadImage = () => {\n        history.push(`/imageDownload/${image._id}`)\n    }\n\n    const deleteImage = async (id) => {\n        if (!userData.token) {\n            history.push(\"/\")\n            return\n        }\n        swal({\n            title: \"Delete image?\",\n            text: \"This cannot be reversed.\",\n            buttons: true\n        })\n            .then(async (willDelete) => {\n                if (willDelete) {\n                    await axios.delete(\n                        `http://localhost:5000/user_images/${id}`,\n                        { headers: { \"x-auth-token\": userData.token } },\n                    );\n                }\n            });\n    }\n\n    const editImage = () => {\n        history.push(`/coloringpage/${image._id}`)\n    }\n\n    return (\n        <>\n        <h1>{userData.user.username}'s Gallery</h1>\n        <div class=\"image-gallery\">\n            {allImages.map((image, i) => {\n                return (\n                    <>\n                    <UserImageCard size=\"small\" userImage={image} />\n                    <div class=\"btn-group\">\n                    <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n                    <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n                    <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n                </div>\n                </>\n                )\n            }\n            )\n            }\n        </div>\n        </>\n\n        // <div>\n        // <h1>{userData.user.username}'s Gallery</h1>\n        //     <div id=\"my-gallery\">\n        //         <div class=\"row\">\n        //             {allImages.map((image, i) => {\n        //                 return (\n        //                     <UserImageCard size=\"small\" userImage={image} />\n        //                 )\n        //             })}\n        //         </div>\n        //     </div>\n        // </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}