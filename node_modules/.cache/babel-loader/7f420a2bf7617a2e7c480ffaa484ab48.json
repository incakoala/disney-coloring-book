{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n  _s();\n\n  const [image, setImage] = useState({});\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    setImage(props.userImage);\n  }, [props]);\n  const downloadImage = {};\n\n  const deleteImage = async id => {\n    if (!userData.token) {\n      history.push(\"/\");\n      return;\n    }\n\n    swal({\n      title: \"Delete image?\",\n      text: \"This cannot be reversed.\",\n      buttons: true\n    }).then(async willDelete => {\n      if (willDelete) {\n        await axios.delete(`http://localhost:5000/user_images/${id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-4 mx-4 my-4\",\n    children: image.component !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-card\",\n      children: [/*#__PURE__*/_jsxDEV(ColoredInImage, {\n        component: image.component,\n        size: props.size,\n        onFill: () => {},\n        fillColors: image.fill_colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"download\",\n        onClick: () => download,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"delete\",\n        onClick: () => deleteImage(image._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"color-me\",\n        Link: true,\n        to: \"/coloringpage/\" + image._id,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this) // <div className=\"image-card\">\n  //     {image.component !== undefined ?\n  //     <div className=\"col-4 mx-4 my-4\">\n  //         <ColoredInImage component={image.component} size={props.size} onFill={()=>{}} fillColors={image.fill_colors} />\n  //         <Link to={\"/coloringpage/\"+image._id}>Edit</Link> | \n  //         <button onClick={() => deleteImage(image._id)}>Delete</button> |\n  //         <Link to={\"/imageDownload/\"+image._id}>Download</Link>\n  //     </div>\n  //     : <>Loading</>\n  //     }\n  // </div>\n  ;\n}\n\n_s(UserImageCard, \"AsQ5GF8ZB/Mo9twWKItmSNgc1Yc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserImageCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserImageCard\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js"],"names":["React","useState","useEffect","useContext","useRef","useHistory","Link","UserContext","axios","swal","ColoredInImage","UserImageCard","props","image","setImage","userData","history","userImage","downloadImage","deleteImage","id","token","push","title","text","buttons","then","willDelete","delete","headers","component","undefined","size","fill_colors","download","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeZ,UAAU,CAACI,WAAD,CAA/B;AACA,QAAMS,OAAO,GAAGX,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACF,KAAK,CAACK,SAAP,CAAR;AACH,GAFQ,EAEN,CAACL,KAAD,CAFM,CAAT;AAIA,QAAMM,aAAa,GAAG,EAAtB;;AAIA,QAAMC,WAAW,GAAG,MAAOC,EAAP,IAAc;AAC9B,QAAI,CAACL,QAAQ,CAACM,KAAd,EAAqB;AACjBL,MAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACA;AACH;;AACDb,IAAAA,IAAI,CAAC;AACDc,MAAAA,KAAK,EAAE,eADN;AAEDC,MAAAA,IAAI,EAAE,0BAFL;AAGDC,MAAAA,OAAO,EAAE;AAHR,KAAD,CAAJ,CAKKC,IALL,CAKU,MAAOC,UAAP,IAAsB;AACxB,UAAIA,UAAJ,EAAgB;AACZ,cAAMnB,KAAK,CAACoB,MAAN,CACD,qCAAoCR,EAAG,EADtC,EAEF;AAAES,UAAAA,OAAO,EAAE;AAAE,4BAAgBd,QAAQ,CAACM;AAA3B;AAAX,SAFE,CAAN;AAIH;AACJ,KAZL;AAaH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACKR,KAAK,CAACiB,SAAN,KAAoBC,SAApB,gBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAElB,KAAK,CAACiB,SAAjC;AAA4C,QAAA,IAAI,EAAElB,KAAK,CAACoB,IAAxD;AAA8D,QAAA,MAAM,EAAE,MAAM,CAAG,CAA/E;AAAiF,QAAA,UAAU,EAAEnB,KAAK,CAACoB;AAAnG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAE,MAAMC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,MAAMf,WAAW,CAACN,KAAK,CAACsB,GAAP,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,IAAI,MAA7B;AAA8B,QAAA,EAAE,EAAE,mBAAmBtB,KAAK,CAACsB,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAOK;AAAA;AAAA;AARV;AAAA;AAAA;AAAA;AAAA,UADJ,CAaI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBJ;AAyBH;;GA1DuBxB,a;UAGJN,U;;;KAHIM,a","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n    const [image, setImage] = useState({});\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        setImage(props.userImage)\n    }, [props])\n\n    const downloadImage = {\n        \n    }\n\n    const deleteImage = async (id) => {\n        if (!userData.token) {\n            history.push(\"/\")\n            return\n        }\n        swal({\n            title: \"Delete image?\",\n            text: \"This cannot be reversed.\",\n            buttons: true\n        })\n            .then(async (willDelete) => {\n                if (willDelete) {\n                    await axios.delete(\n                        `http://localhost:5000/user_images/${id}`,\n                        { headers: { \"x-auth-token\": userData.token } },\n                    );\n                }\n            });\n    }\n\n    return (\n        <div className=\"col-4 mx-4 my-4\">\n            {image.component !== undefined ?\n                <div className=\"image-card\">\n                    <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n                    <button class=\"download\" onClick={() => download}>Download</button>\n                    <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n                    <button class=\"color-me\" Link to={\"/coloringpage/\" + image._id}>Edit</button>\n                </div>\n                : <>Loading</>\n            }\n        </div>\n\n        // <div className=\"image-card\">\n        //     {image.component !== undefined ?\n        //     <div className=\"col-4 mx-4 my-4\">\n        //         <ColoredInImage component={image.component} size={props.size} onFill={()=>{}} fillColors={image.fill_colors} />\n        //         <Link to={\"/coloringpage/\"+image._id}>Edit</Link> | \n        //         <button onClick={() => deleteImage(image._id)}>Delete</button> |\n        //         <Link to={\"/imageDownload/\"+image._id}>Download</Link>\n        //     </div>\n        //     : <>Loading</>\n        //     }\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}