{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\";\nimport './login.css';\nimport { ModalProvider, Modal } from \"./modal.js\";\nimport SignUp from \"./signUp\"; // https://levelup.gitconnected.com/build-a-modal-using-react-context-portals-and-hooks-bd0c4e54537e\n\nexport default function Login() {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [error, setError] = useState();\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async e => {\n    try {\n      e.preventDefault();\n      const loginUser = {\n        username,\n        password\n      };\n      const loginRes = await axios.post(\"http://localhost:5000/users/login\", loginUser);\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/home\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalOpen(false),\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n            message: error,\n            clearError: () => setError(undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"2xJbLkj5JI288qUg3rGs3W+k1/4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n{\n  /* \n         <img className=\"title\" id=\"title\" src={title} alt=\"Logo\" />\n         <img className=\"loginphoto\" id=\"mickey\" src={mickey} alt=\"Logo\" />\n         <button className=\"button button4\" id=\"login\">Login</button>\n         <img className=\"loginphoto\" id='minnie'src={minnie} alt=\"Logo\" />\n         <button className=\"button button4\" id=\"singup\">Sign Up</button>\n         <img className='loginphoto'id=\"mickey2\" src={mickey} alt=\"Logo\" />\n         <button className=\"button_2\" id=\"login2\">Login</button>\n         <button className=\"button_2\" id=\"signup2\">Sign Up</button> */\n}\n{\n  /*  \n               <h2>Sign In</h2>\n               {error && (\n                   <ErrorNotice message={error} clearError={() => setError(undefined)} />\n               )}\n               <input type=\"text\" \n               onChange={(e) => setUsername(e.target.value)}\n               required\n               placeholder=\"Username\" />\n                <input type=\"password\" \n               required\n               onChange={(e) => setPassword(e.target.value)}\n               placeholder=\"Password\" />\n                <input type= \"submit\" value=\"Log In\" /> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/login.js"],"names":["React","useState","useContext","UserContext","useHistory","axios","ErrorNotice","ModalProvider","Modal","SignUp","Login","username","setUsername","password","setPassword","isModalOpen","setIsModalOpen","error","setError","setUserData","history","submit","e","preventDefault","loginUser","loginRes","post","token","data","user","localStorage","setItem","push","err","response","msg","undefined","target","value"],"mappings":"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","sourcesContent":["\nimport React, {useState, useContext} from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\";\nimport './login.css';\nimport { ModalProvider, Modal } from \"./modal.js\";\nimport SignUp from \"./signUp\";\n\n// https://levelup.gitconnected.com/build-a-modal-using-react-context-portals-and-hooks-bd0c4e54537e\n\n\n export default function Login() {\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [error, setError] = useState();\n  \n  \n  const {setUserData} = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async (e) => {\n    try{\n      e.preventDefault();\n      const loginUser = {username, password};\n      const loginRes = await axios.post(\"http://localhost:5000/users/login\", loginUser);\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/home\");\n  } catch(err){\n    err.response.data.msg \n    && setError(err.response.data.msg)\n    ;\n  }\n  };\n\n  return(\n    <>\n\n   \n   \n  <ModalProvider>\n\n{/*  \n  <form onSubmit={submit} > */}\n      <button className=\"button\" type=\"button\"   onClick={() => setIsModalOpen(true)}>\n   Login\n      </button>\n      <SignUp/>\n  \n      {isModalOpen && (\n        <Modal onClose={() => setIsModalOpen(false)}>\n           \n  <form onSubmit={submit} >\n          {/* <form\n            onSubmit={event => {\n              event.preventDefault(); \n              console.log(\"modal submit\");\n            }} > */}\n              \n              {error && (\n      <ErrorNotice message={error} clearError={() => setError(undefined)} />\n    )}\n              <input type=\"text\" \n              onChange={(e) => setUsername(e.target.value)}\n              required\n              placeholder=\"Username\" />\n\n              <input type=\"password\" \n              required\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\" />\n              <br></br>\n              <input type= \"submit\" value=\"Log In\" />\n          </form>\n        </Modal>\n      )}\n  \n  </ModalProvider>\n\n  </>\n);\n}\n\n\n\n\n{/* \n        <img className=\"title\" id=\"title\" src={title} alt=\"Logo\" />\n        <img className=\"loginphoto\" id=\"mickey\" src={mickey} alt=\"Logo\" />\n        <button className=\"button button4\" id=\"login\">Login</button>\n        <img className=\"loginphoto\" id='minnie'src={minnie} alt=\"Logo\" />\n        <button className=\"button button4\" id=\"singup\">Sign Up</button>\n        <img className='loginphoto'id=\"mickey2\" src={mickey} alt=\"Logo\" />\n        <button className=\"button_2\" id=\"login2\">Login</button>\n        <button className=\"button_2\" id=\"signup2\">Sign Up</button> */}\n      \n{/*  \n              <h2>Sign In</h2>\n              {error && (\n                  <ErrorNotice message={error} clearError={() => setError(undefined)} />\n              )}\n              <input type=\"text\" \n              onChange={(e) => setUsername(e.target.value)}\n              required\n              placeholder=\"Username\" />\n\n              <input type=\"password\" \n              required\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\" />\n\n              <input type= \"submit\" value=\"Log In\" /> */}\n\n  \n\n "]},"metadata":{},"sourceType":"module"}