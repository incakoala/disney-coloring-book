{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar.component\";\nimport Login from \"./components/login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './components/login.css';\nimport axios from 'axios';\nimport SignUp from './components/signUp';\nimport HomePage from './components/home.js';\nimport SignOut from './components/signOut'; // importing user context to set state for whole app\n\nimport UserContext from \"./context/UserContext\";\nimport ColoringPage from './components/coloringPage';\nimport ImageGallery from './components/ImageGallery';\nimport UserGallery from './components/userGallery';\nimport ImageDownload from './components/imageDownload';\nimport Showcase from './components/showcase';\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    token: undefined,\n    //stores token\n    user: undefined // stores id and username for user\n\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await axios.post(\"http://localhost:5000/users/tokenIsValid\", null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:5000/users/\", {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n          value: {\n            userData,\n            setUserData\n          },\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-container\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signUp\",\n                component: SignUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                component: Login\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/home\",\n                component: HomePage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/coloringpage/:id\",\n                component: ColoringPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/imageGallery\",\n                component: ImageGallery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/userGallery\",\n                component: UserGallery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/imageDownload/:id\",\n                component: ImageDownload\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/showcase\",\n                component: Showcase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signOut\",\n                component: SignOut\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cshufIvOvWm2ikjWXbvb2wbARm4=\");\n\n_c = App;\nexport default App; // import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import  Navbar  from \"./components/navbar.component\";\n// import Login from \"./components/login\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import './components/login.css';\n// import axios from 'axios';\n// import SignUp from './components/signUp';\n// import HomePage from './components/home.js';\n// import SignOut from './components/signOut';\n// // importing user context to set state for whole app\n// import UserContext from \"./context/UserContext\";\n// import ColoringPage from './components/coloringPage';\n// import ImageGallery from './components/ImageGallery';\n// import UserGallery from './components/userGallery';\n// function App() {\n//   const [userData, setUserData] = useState({\n//     token: undefined, //stores token\n//     user: undefined,  // stores id and username for user\n//   });\n//   useEffect(() => {\n//     const checkLoggedIn = async() => {\n//       let token = localStorage.getItem(\"auth-token\");\n//       if(token === null){\n//         localStorage.setItem(\"auth-token\", \"\");\n//         token = \"\";\n//       }\n//       const tokenRes = await axios.post(\"http://localhost:5000/users/tokenIsValid\", null, {headers: {\"x-auth-token\": token}});\n//       if (tokenRes.data) {\n//         const userRes = await axios.get(\"http://localhost:5000/users/\", {\n//           headers: {\"x-auth-token\": token},\n//         });\n//         setUserData({\n//           token,\n//           user: userRes.data,\n//         });\n//       }\n//     };\n//     checkLoggedIn();\n//   }, []);\n//   return(\n//     <Router>\n//       {/* Everything inside has access to the user data.  Gives state to all of the components. */}\n//       <UserContext.Provider value={{userData, setUserData}}>\n//       <div className=\"container\">\n//         <Navbar />\n//             <Switch>\n//               <Route path=\"/signUp\" component={SignUp} /> \n//               <Route path=\"/\" exact component={Login} /> \n//               <Route path=\"/home\" component={HomePage} /> \n//               <Route path=\"/coloringpage/:id\" component={ColoringPage} /> \n//               <Route path=\"/imageGallery\" component={ImageGallery} /> \n//               <Route path=\"/userGallery\" component={UserGallery} /> \n//               <Route path=\"/signOut\" component={SignOut} /> \n//           </Switch>\n//       </div>\n//       </UserContext.Provider>\n//     </Router>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Login","axios","SignUp","HomePage","SignOut","UserContext","ColoringPage","ImageGallery","UserGallery","ImageDownload","Showcase","App","userData","setUserData","token","undefined","user","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get"],"mappings":"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B,gBAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,SAAS,EAAEN;AAAlC;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAvDQO,G;;KAAAA,G;AAyDT,eAAeA,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar.component\";\nimport Login from \"./components/login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './components/login.css';\nimport axios from 'axios';\nimport SignUp from './components/signUp';\nimport HomePage from './components/home.js';\nimport SignOut from './components/signOut';\n// importing user context to set state for whole app\nimport UserContext from \"./context/UserContext\";\nimport ColoringPage from './components/coloringPage';\nimport ImageGallery from './components/ImageGallery';\nimport UserGallery from './components/userGallery';\nimport ImageDownload from './components/imageDownload';\nimport Showcase from './components/showcase';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined, //stores token\n    user: undefined,  // stores id and username for user\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\"http://localhost:5000/users/tokenIsValid\", null, { headers: { \"x-auth-token\": token } });\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:5000/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"background\">\n\n        <Router>\n          {/* Everything inside has access to the user data.  Gives state to all of the components. */}\n          <UserContext.Provider value={{ userData, setUserData }}>\n            <Navbar />\n            <div className=\"inner-container\">\n              <Switch>\n                <Route path=\"/signUp\" component={SignUp} />\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/home\" component={HomePage} />\n                <Route path=\"/coloringpage/:id\" component={ColoringPage} />\n                <Route path=\"/imageGallery\" component={ImageGallery} />\n                <Route path=\"/userGallery\" component={UserGallery} />\n                <Route path=\"/imageDownload/:id\" component={ImageDownload} />\n                <Route path=\"/showcase\" component={Showcase} />\n                <Route path=\"/signOut\" component={SignOut} />\n              </Switch>\n            </div>\n          </UserContext.Provider>\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import  Navbar  from \"./components/navbar.component\";\n// import Login from \"./components/login\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import './components/login.css';\n// import axios from 'axios';\n// import SignUp from './components/signUp';\n// import HomePage from './components/home.js';\n// import SignOut from './components/signOut';\n// // importing user context to set state for whole app\n// import UserContext from \"./context/UserContext\";\n// import ColoringPage from './components/coloringPage';\n// import ImageGallery from './components/ImageGallery';\n// import UserGallery from './components/userGallery';\n\n\n// function App() {\n//   const [userData, setUserData] = useState({\n//     token: undefined, //stores token\n//     user: undefined,  // stores id and username for user\n//   });\n  \n//   useEffect(() => {\n//     const checkLoggedIn = async() => {\n//       let token = localStorage.getItem(\"auth-token\");\n//       if(token === null){\n//         localStorage.setItem(\"auth-token\", \"\");\n//         token = \"\";\n//       }\n//       const tokenRes = await axios.post(\"http://localhost:5000/users/tokenIsValid\", null, {headers: {\"x-auth-token\": token}});\n//       if (tokenRes.data) {\n//         const userRes = await axios.get(\"http://localhost:5000/users/\", {\n//           headers: {\"x-auth-token\": token},\n//         });\n//         setUserData({\n//           token,\n//           user: userRes.data,\n//         });\n//       }\n//     };\n\n//     checkLoggedIn();\n//   }, []);\n\n//   return(\n//     <Router>\n//       {/* Everything inside has access to the user data.  Gives state to all of the components. */}\n//       <UserContext.Provider value={{userData, setUserData}}>\n//       <div className=\"container\">\n//         <Navbar />\n//             <Switch>\n//               <Route path=\"/signUp\" component={SignUp} /> \n//               <Route path=\"/\" exact component={Login} /> \n//               <Route path=\"/home\" component={HomePage} /> \n//               <Route path=\"/coloringpage/:id\" component={ColoringPage} /> \n//               <Route path=\"/imageGallery\" component={ImageGallery} /> \n//               <Route path=\"/userGallery\" component={UserGallery} /> \n//               <Route path=\"/signOut\" component={SignOut} /> \n//           </Switch>\n//       </div>\n//       </UserContext.Provider>\n//     </Router>\n//   );\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}