{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/imageDownload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport ColoredInImage from \"./images/coloredInImage\";\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport { saveSvgAsPng } from 'save-svg-as-png';\nimport swal from 'sweetalert'; // Sources:\n// https://uxdesign.cc/5-steps-to-create-a-simple-digital-coloring-book-in-react-3d4f5b2af822\n// MERN Stack Tutorial with Auth (8 part series):\n// https://www.youtube.com/watch?v=4_ZiJGY5F38\n\nexport default function ImageDownload(props) {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [userImage, setUserImage] = useState({});\n  const {\n    userData\n  } = useContext(UserContext);\n  const [fetched, setFetched] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    // function uses get route to get a specific user image for a user\n    const fetchItems = async () => {\n      if (!fetched) {\n        const response = await axios.get(`http://localhost:5000/user_images/${id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n        setUserImage(response.data);\n        setFetched(true);\n      }\n    };\n\n    fetchItems();\n  }); // function that downloads image as png\n\n  const saveImage = () => {\n    swal({\n      title: \"Download image as PNG?\",\n      buttons: true\n    }).then(toDownload => {\n      if (toDownload) {\n        saveSvgAsPng(document.getElementById(\"Layer_1\"), `${userImage.component}.png`);\n      }\n\n      history.push(\"/userGallery\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ColoredInImage, {\n      size: \"large\",\n      component: userImage.component,\n      fillColors: userImage.fill_colors\n    }, userImage._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), saveImage()]\n  }, void 0, true);\n}\n\n_s(ImageDownload, \"41uGjRwDqzRP7ci26xo15m4c2xk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ImageDownload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageDownload\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/imageDownload.js"],"names":["React","useState","useEffect","useContext","useParams","useHistory","ColoredInImage","UserContext","axios","saveSvgAsPng","swal","ImageDownload","props","id","userImage","setUserImage","userData","fetched","setFetched","history","fetchItems","response","get","headers","token","data","saveImage","title","buttons","then","toDownload","document","getElementById","component","push","fill_colors","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAEA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,MAAI;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAtB;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAeb,UAAU,CAACI,WAAD,CAA/B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMkB,OAAO,GAAGd,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMkB,UAAU,GAAG,YAAY;AAC7B,UAAI,CAACH,OAAL,EAAc;AACZ,cAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CACpB,qCAAoCT,EAAG,EADnB,EAErB;AAAEU,UAAAA,OAAO,EAAE;AAAE,4BAAgBP,QAAQ,CAACQ;AAA3B;AAAX,SAFqB,CAAvB;AAIAT,QAAAA,YAAY,CAACM,QAAQ,CAACI,IAAV,CAAZ;AACAP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KATD;;AAUAE,IAAAA,UAAU;AACX,GAbQ,CAAT,CAP2C,CAsB3C;;AACA,QAAMM,SAAS,GAAG,MAAM;AACtBhB,IAAAA,IAAI,CAAC;AACHiB,MAAAA,KAAK,EAAE,wBADJ;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAD,CAAJ,CAIGC,IAJH,CAISC,UAAD,IAAgB;AACpB,UAAIA,UAAJ,EAAgB;AACdrB,QAAAA,YAAY,CAACsB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAD,EAAsC,GAAElB,SAAS,CAACmB,SAAU,MAA5D,CAAZ;AACD;;AACDd,MAAAA,OAAO,CAACe,IAAR,CAAa,cAAb;AACD,KATH;AAUD,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,OAArB;AAAiD,MAAA,SAAS,EAAEpB,SAAS,CAACmB,SAAtE;AAAiF,MAAA,UAAU,EAAEnB,SAAS,CAACqB;AAAvG,OAAkCrB,SAAS,CAACsB,GAA5C;AAAA;AAAA;AAAA;AAAA,YADF,EAGGV,SAAS,EAHZ;AAAA,kBADF;AAOD;;GA3CuBf,a;UACTP,S,EAIGC,U;;;KALMM,a","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport ColoredInImage from \"./images/coloredInImage\";\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport { saveSvgAsPng } from 'save-svg-as-png';\nimport swal from 'sweetalert';\n\n// Sources:\n// https://uxdesign.cc/5-steps-to-create-a-simple-digital-coloring-book-in-react-3d4f5b2af822\n// MERN Stack Tutorial with Auth (8 part series):\n// https://www.youtube.com/watch?v=4_ZiJGY5F38\n\nexport default function ImageDownload(props) {\n  let { id } = useParams();\n  const [userImage, setUserImage] = useState({});\n  const { userData } = useContext(UserContext);\n  const [fetched, setFetched] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    // function uses get route to get a specific user image for a user\n    const fetchItems = async () => {\n      if (!fetched) {\n        const response = await axios.get(\n          `http://localhost:5000/user_images/${id}`,\n          { headers: { \"x-auth-token\": userData.token } },\n        );\n        setUserImage(response.data)\n        setFetched(true)\n      }\n    }\n    fetchItems();\n  })\n\n  // function that downloads image as png\n  const saveImage = () => {\n    swal({\n      title: \"Download image as PNG?\",\n      buttons: true\n    })\n      .then((toDownload) => {\n        if (toDownload) {\n          saveSvgAsPng(document.getElementById(\"Layer_1\"), `${userImage.component}.png`);\n        }\n        history.push(\"/userGallery\")\n      });\n  }\n\n  return (\n    <>\n      <ColoredInImage size=\"large\" key={userImage._id} component={userImage.component} fillColors={userImage.fill_colors} />\n      {/* saveImage function is called */}\n      {saveImage()}\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}