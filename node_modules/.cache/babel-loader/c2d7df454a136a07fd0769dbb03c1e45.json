{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/coloringPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom'; // import { useSelector } from 'react-redux';\n\nimport ColoredInImage from \"./images/coloredInImage\";\nimport ColorPalette from '../components/colorPalette';\nimport UserContext from \"../context/UserContext\";\nimport Stitch from \"./images/stitch\";\nimport Minnie from \"./images/minnie\";\nimport axios from 'axios'; // const components = {\n//     \"stitch\": Stitch\n// }\n\nexport default function ColoringPage() {\n  _s();\n\n  // object id of the user image (different for each copy of the smae image)\n  let {\n    id\n  } = useParams();\n  console.log({\n    id\n  });\n  const [userImage, setUserImage] = useState({});\n  const [color, setColor] = useState(\"blue\");\n  const [fetched, setFetched] = useState(false);\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n  useEffect(() => {\n    // getting user image object from database using the object id\n    const fetchItems = async () => {\n      if (!fetched) {\n        const response = await axios.get(`http://localhost:5000/user_images/${id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        }); // set the user image \n\n        setUserImage(response.data);\n        console.log(response.data);\n        setFetched(true);\n      }\n    };\n\n    fetchItems();\n  });\n\n  const onFillColor = async i => {\n    let newFillColors = userImage.fill_colors.slice(0);\n    newFillColors[i] = color;\n    userImage.fill_colors = newFillColors;\n    setUserImage({ ...userImage\n    });\n    console.log(userImage);\n\n    try {\n      //var token = JSON.parse(localStorage.getItem(\"auth-token\"));\n      const response = await axios.post(`http://localhost:5000/user_images/${id}`, userImage, {\n        headers: {\n          \"x-auth-token\": userData.token\n        }\n      });\n      console.log(response);\n    } catch (err) {\n      console.log(\"no\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coloring-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"coloring-image-container\",\n      children: /*#__PURE__*/_jsxDEV(ColoredInImage, {\n        size: \"large\",\n        component: userImage.component,\n        onFill: onFillColor,\n        fillColors: userImage.fill_colors\n      }, userImage._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {\n      currentColor: color,\n      changeColor: setColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n} // import React, {useState, useContext, useEffect, useCallback} from \"react\";\n// import {useParams, useHistory} from 'react-router-dom';\n// // import { useSelector } from 'react-redux';\n// import ColoredInImage from \"./images/coloredInImage\";\n// import ColorPalette from '../components/colorPalette'\n// import UserContext from \"../context/UserContext\";\n// import Stitch from \"./images/stitch\";\n// import Minnie from \"./images/minnie\";\n// import axios from 'axios';\n// // const components = {\n// //     \"stitch\": Stitch\n// // }\n// export default function ColoringPage() {\n//     // object id of the user image (different for each copy of the smae image)\n//     let {id} = useParams();\n//     console.log({id})\n//     const [userImage, setUserImage] = useState({});\n//     const [color, setColor] = useState(\"blue\");\n//     const [fetched, setFetched] = useState(false);\n//     // const [ColorImage, setColorImage] = useState();\n//     const history = useHistory();\n//     const {userData} = useContext(UserContext);\n//     useEffect(() => {\n//         // getting user image object from database using the object id\n//         const fetchItems = async () => {\n//             if (!fetched) {\n//                 const response = await axios.get(\n//                     `http://localhost:5000/user_images/${id}`, \n//                     {headers: {\"x-auth-token\": userData.token}},\n//                 );\n//                 // set the user image \n//                 setUserImage(response.data)\n//                 // setColorImage(components[userImage.component])\n//                 console.log(response.data)\n//                 setFetched(true)\n//             }\n//           }\n//         fetchItems();  \n//     })\n//     const onFillColor = async (i) => {\n//         let newFillColors = userImage.fill_colors.slice(0)\n//         newFillColors[i] = color \n//         setUserImage({\n//             ...userImage,\n//             fill_colors: newFillColors\n//         })\n//         console.log(userImage)\n//         try{\n//             //var token = JSON.parse(localStorage.getItem(\"auth-token\"));\n//             const response = await axios.post(\n//             `http://localhost:5000/user_images/${id}`, \n//             userImage,\n//               {headers: {\"x-auth-token\": userData.token}},\n//             );\n//             console.log(response);\n//         } catch(err){\n//             console.log(\"no\");\n//           }\n//         // const response = axios.post(\n//         //     `http://localhost:5000/user_images/${id}`, \n//         //     {headers: {\"x-auth-token\": userData.token}},\n//         //     userImage,\n//         // );\n//         // console.log(response)\n//     //     fetch(`https://color-by-nature-api.herokuapp.com/user_images/${id}`,{\n//     //         method: 'PATCH',\n//     //         headers: {\n//     //             'Content-Type': 'application/json',\n//     //             'Authorization': `bearer ${token}`},\n//     //         body: JSON.stringify({id: userImage.id, fill_colors: newFillColors})\n//     //     })\n//     //     .then(r => r.json())\n//     //     .then(console.log)   \n//     }\n//     return(\n//         <div className=\"coloring-page\">\n//             <ColorPalette currentColor={color} changeColor={setColor} />\n//             <div id=\"coloring-image-container\" > \n//                 <ColoredInImage size=\"large\" component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/>\n//                 {/* <ColoredInImage size=\"large\" component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/> */}\n//                 {/* <ColorImage id=\"svg-image\" onFillColor={onFillColor} fillColors={userImage.fill_colors} />    */}\n//                 {/* <p class=\"auto-save-text\" >* This image will save automatically, so color away! <span role='img' aria-label='thumbs up emoji'>üëç</span></p> */}\n//             </div>\n//             {/* <div className=\"image-description\">\n//                 <h2 id=\"description-heading\" >{currentImage.national_park} National Park</h2>\n//                 <hr />\n//                 <p><b>Established:</b> {currentImage.year}</p>\n//                 <p><b>Location:</b> {currentImage.location}</p>\n//                 <p>{currentImage.description}</p>    \n//             </div>  */}\n//         </div>\n//      )\n// }\n\n_s(ColoringPage, \"T+XOBDYjyun8W5fffDjOBAZLdbY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ColoringPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColoringPage\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/coloringPage.js"],"names":["React","useState","useContext","useEffect","useCallback","useParams","useHistory","ColoredInImage","ColorPalette","UserContext","Stitch","Minnie","axios","ColoringPage","id","console","log","userImage","setUserImage","color","setColor","fetched","setFetched","history","userData","fetchItems","response","get","headers","token","data","onFillColor","i","newFillColors","fill_colors","slice","post","err","component","_id"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect, useCallback} from \"react\";\nimport {useParams, useHistory} from 'react-router-dom';\n// import { useSelector } from 'react-redux';\nimport ColoredInImage from \"./images/coloredInImage\";\nimport ColorPalette from '../components/colorPalette'\nimport UserContext from \"../context/UserContext\";\nimport Stitch from \"./images/stitch\";\nimport Minnie from \"./images/minnie\";\nimport axios from 'axios';\n\n// const components = {\n//     \"stitch\": Stitch\n// }\n\nexport default function ColoringPage() {\n\n    // object id of the user image (different for each copy of the smae image)\n    let {id} = useParams();\n    console.log({id})\n    const [userImage, setUserImage] = useState({});\n    const [color, setColor] = useState(\"blue\");\n    const [fetched, setFetched] = useState(false);\n    const history = useHistory();\n    \n    const {userData} = useContext(UserContext);\n\n    useEffect(() => {\n        // getting user image object from database using the object id\n        const fetchItems = async () => {\n            if (!fetched) {\n                const response = await axios.get(\n                    `http://localhost:5000/user_images/${id}`, \n                    {headers: {\"x-auth-token\": userData.token}},\n                );\n                // set the user image \n                setUserImage(response.data)\n                console.log(response.data)\n                setFetched(true)\n            }\n          }\n        fetchItems();  \n    })\n\n    const onFillColor = async (i) => {\n        let newFillColors = userImage.fill_colors.slice(0)\n        newFillColors[i] = color \n        userImage.fill_colors = newFillColors\n    \n        setUserImage({\n            ...userImage\n        })\n\n        console.log(userImage)\n        try{\n            //var token = JSON.parse(localStorage.getItem(\"auth-token\"));\n            const response = await axios.post(\n            `http://localhost:5000/user_images/${id}`, \n            userImage,\n              {headers: {\"x-auth-token\": userData.token}},\n            );\n            console.log(response);\n        } catch(err){\n            console.log(\"no\");\n          } \n    }\n\n    return(\n        <div className=\"coloring-page\">\n            <div id=\"coloring-image-container\" > \n                <ColoredInImage size=\"large\" key={userImage._id} component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/>\n                {/* <ColoredInImage size=\"large\" component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/> */}\n                {/* <ColorImage id=\"svg-image\" onFillColor={onFillColor} fillColors={userImage.fill_colors} />    */}\n            </div>\n            <ColorPalette currentColor={color} changeColor={setColor} />\n        </div>\n     )\n}\n\n\n\n// import React, {useState, useContext, useEffect, useCallback} from \"react\";\n// import {useParams, useHistory} from 'react-router-dom';\n// // import { useSelector } from 'react-redux';\n// import ColoredInImage from \"./images/coloredInImage\";\n// import ColorPalette from '../components/colorPalette'\n// import UserContext from \"../context/UserContext\";\n// import Stitch from \"./images/stitch\";\n// import Minnie from \"./images/minnie\";\n// import axios from 'axios';\n\n// // const components = {\n// //     \"stitch\": Stitch\n// // }\n\n// export default function ColoringPage() {\n\n//     // object id of the user image (different for each copy of the smae image)\n//     let {id} = useParams();\n//     console.log({id})\n//     const [userImage, setUserImage] = useState({});\n//     const [color, setColor] = useState(\"blue\");\n//     const [fetched, setFetched] = useState(false);\n//     // const [ColorImage, setColorImage] = useState();\n//     const history = useHistory();\n    \n//     const {userData} = useContext(UserContext);\n\n//     useEffect(() => {\n//         // getting user image object from database using the object id\n//         const fetchItems = async () => {\n//             if (!fetched) {\n//                 const response = await axios.get(\n//                     `http://localhost:5000/user_images/${id}`, \n//                     {headers: {\"x-auth-token\": userData.token}},\n//                 );\n//                 // set the user image \n//                 setUserImage(response.data)\n//                 // setColorImage(components[userImage.component])\n//                 console.log(response.data)\n//                 setFetched(true)\n//             }\n//           }\n//         fetchItems();  \n//     })\n\n//     const onFillColor = async (i) => {\n//         let newFillColors = userImage.fill_colors.slice(0)\n//         newFillColors[i] = color \n    \n//         setUserImage({\n//             ...userImage,\n//             fill_colors: newFillColors\n//         })\n\n//         console.log(userImage)\n//         try{\n//             //var token = JSON.parse(localStorage.getItem(\"auth-token\"));\n//             const response = await axios.post(\n//             `http://localhost:5000/user_images/${id}`, \n//             userImage,\n//               {headers: {\"x-auth-token\": userData.token}},\n//             );\n//             console.log(response);\n//         } catch(err){\n//             console.log(\"no\");\n//           }\n\n//         // const response = axios.post(\n//         //     `http://localhost:5000/user_images/${id}`, \n//         //     {headers: {\"x-auth-token\": userData.token}},\n//         //     userImage,\n//         // );\n//         // console.log(response)\n\n//     //     fetch(`https://color-by-nature-api.herokuapp.com/user_images/${id}`,{\n//     //         method: 'PATCH',\n//     //         headers: {\n//     //             'Content-Type': 'application/json',\n//     //             'Authorization': `bearer ${token}`},\n//     //         body: JSON.stringify({id: userImage.id, fill_colors: newFillColors})\n//     //     })\n//     //     .then(r => r.json())\n//     //     .then(console.log)   \n//     }\n\n//     return(\n//         <div className=\"coloring-page\">\n//             <ColorPalette currentColor={color} changeColor={setColor} />\n//             <div id=\"coloring-image-container\" > \n//                 <ColoredInImage size=\"large\" component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/>\n//                 {/* <ColoredInImage size=\"large\" component={userImage.component} onFill={onFillColor} fillColors={userImage.fill_colors}/> */}\n//                 {/* <ColorImage id=\"svg-image\" onFillColor={onFillColor} fillColors={userImage.fill_colors} />    */}\n//                 {/* <p class=\"auto-save-text\" >* This image will save automatically, so color away! <span role='img' aria-label='thumbs up emoji'>üëç</span></p> */}\n//             </div>\n//             {/* <div className=\"image-description\">\n//                 <h2 id=\"description-heading\" >{currentImage.national_park} National Park</h2>\n//                 <hr />\n//                 <p><b>Established:</b> {currentImage.year}</p>\n//                 <p><b>Location:</b> {currentImage.location}</p>\n//                 <p>{currentImage.description}</p>    \n//             </div>  */}\n//         </div>\n//      )\n// }"]},"metadata":{},"sourceType":"module"}