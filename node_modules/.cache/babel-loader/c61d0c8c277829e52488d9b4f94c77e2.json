{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n  _s();\n\n  const [image, setImage] = useState({});\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  const [fetched, setFetched] = useState(false); // useEffect(() => {\n  //     setImage(props.userImage)\n  // }, [props])\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const response = await axios.get(`http://localhost:5000/user_images/${props.userImage._d}`, {\n        headers: {\n          \"x-auth-token\": userData.token\n        }\n      });\n      setImage(response.data);\n      console.log(props.userImage.imageId);\n    };\n\n    fetchItems();\n  });\n\n  const downloadImage = () => {\n    history.push(`/imageDownload/${image._id}`);\n  };\n\n  const deleteImage = async () => {\n    if (!userData.token) {\n      history.push(\"/userGallery\");\n      return;\n    }\n\n    swal({\n      title: \"Delete image?\",\n      text: \"This cannot be reversed.\",\n      buttons: true\n    }).then(async willDelete => {\n      if (willDelete) {\n        await axios.delete(`http://localhost:5000/user_images/${image._id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n      }\n    });\n  };\n\n  const editImage = () => {\n    history.push(`/coloringpage/${image._id}`);\n  };\n\n  const changePublicity = async () => {\n    image.public === false ? image.public = true : image.public = false;\n    console.log(image.public);\n    setImage({ ...image\n    });\n\n    if (!userData.token) {\n      history.push(\"/userGallery\");\n      return;\n    }\n\n    await axios.patch(`http://localhost:5000/user_images/${image._id}`, image, {\n      headers: {\n        \"x-auth-token\": userData.token\n      }\n    });\n    console.log(image);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-card\",\n    children: image.component !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ColoredInImage, {\n        component: image.component,\n        size: props.size,\n        onFill: () => {},\n        fillColors: image.fill_colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"btn-group\",\n        id: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"download\",\n          onClick: () => downloadImage(),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"delete\",\n          onClick: () => deleteImage(),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"color-me\",\n          onClick: () => editImage(),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"public\",\n          onClick: () => changePublicity(),\n          children: \"Publicize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this) // <div className=\"col-4 mx-4 my-4 mt-auto\">\n  //     {image.component !== undefined ?\n  //             <>\n  //             <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n  //             <div class=\"btn-group\">\n  //                 <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n  //                 <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n  //                 <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n  //             </div>\n  //             </>\n  //         : <>Loading</>\n  //     }\n  // </div>\n  ;\n}\n\n_s(UserImageCard, \"jcPQdvXaPA6L7C95TOGFkdWpJBM=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserImageCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserImageCard\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js"],"names":["React","useState","useEffect","useContext","useRef","useHistory","Link","UserContext","axios","swal","ColoredInImage","UserImageCard","props","image","setImage","userData","history","fetched","setFetched","fetchItems","response","get","userImage","_d","headers","token","data","console","log","imageId","downloadImage","push","_id","deleteImage","title","text","buttons","then","willDelete","delete","editImage","changePublicity","public","patch","component","undefined","size","fill_colors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n    const [image, setImage] = useState({});\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n    const [fetched, setFetched] = useState(false);\n\n\n    // useEffect(() => {\n    //     setImage(props.userImage)\n    // }, [props])\n\n    useEffect(() => {\n        const fetchItems = async () => {\n            const response = await axios.get(\n                `http://localhost:5000/user_images/${props.userImage._d}`,\n                { headers: { \"x-auth-token\": userData.token } },\n            );\n            setImage(response.data);\n            console.log(props.userImage.imageId);\n        }\n        fetchItems();\n    })\n\n    const downloadImage = () => {\n        history.push(`/imageDownload/${image._id}`)\n    }\n\n    const deleteImage = async () => {\n        if (!userData.token) {\n            history.push(\"/userGallery\")\n            return\n        }\n        swal({\n            title: \"Delete image?\",\n            text: \"This cannot be reversed.\",\n            buttons: true\n        })\n            .then(async (willDelete) => {\n                if (willDelete) {\n                    await axios.delete(\n                        `http://localhost:5000/user_images/${image._id}`,\n                        { headers: { \"x-auth-token\": userData.token } },\n                    );\n                }\n            });\n    }\n\n    const editImage = () => {\n        history.push(`/coloringpage/${image._id}`)\n    }\n\n    const changePublicity = async () => {\n        image.public === false ? image.public = true : image.public = false\n        console.log(image.public)\n\n        setImage ({\n            ...image\n        })\n\n        if (!userData.token) {\n            history.push(\"/userGallery\")\n            return\n        }\n\n            \n                await axios.patch(\n                    `http://localhost:5000/user_images/${image._id}`,\n                    image,\n                    { headers: { \"x-auth-token\": userData.token } },\n                );\n                console.log(image);\n            \n        \n    }\n\n    return (\n        <div className=\"image-card\">\n            {image.component !== undefined ?\n                <>\n                    <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n                    <div class=\"btn-group\" id=\"user\">\n                        <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n                        <button class=\"delete\" onClick={() => deleteImage()}>Delete</button>\n                        <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n                        <button class=\"public\" onClick={() => changePublicity()}>Publicize</button>\n                    </div>\n                </>\n                : <>Loading</>\n            }\n        </div>\n\n        // <div className=\"col-4 mx-4 my-4 mt-auto\">\n        //     {image.component !== undefined ?\n        //             <>\n        //             <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n        //             <div class=\"btn-group\">\n        //                 <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n        //                 <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n        //                 <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n        //             </div>\n        //             </>\n        //         : <>Loading</>\n        //     }\n        // </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}