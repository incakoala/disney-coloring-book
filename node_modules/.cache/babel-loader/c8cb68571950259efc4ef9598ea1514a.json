{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/signUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\"; // Source:\n// MERN Stack Tutorial with Auth (8 part series):\n// https://www.youtube.com/watch?v=4_ZiJGY5F38\n\nexport default function Register() {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [error, setError] = useState();\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory(); // function that submits info related to new user\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      // newUser object is created\n      const newUser = {\n        username,\n        password,\n        passwordCheck\n      }; // calls post route to add new user to database\n\n      await axios.post(\"http://localhost:5000/users/add\", newUser); // user is logged in\n\n      const loginRes = await axios.post(\"http://localhost:5000/users/login\", {\n        username,\n        password\n      }); // user data including auth token is set\n\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user\n      }); // auth token is set in local storage\n\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  }; // Sign Up form which takes in user input in fields \n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user signinBx\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formBx\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submit,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n              message: error,\n              clearError: () => setError(undefined)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              placeholder: \"Username\",\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"register-password\",\n              type: \"password\",\n              placeholder: \"Password\",\n              required: true,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Verify password\",\n              required: true,\n              onChange: e => setPasswordCheck(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"2wM541MrGxcjk+WgsnOp0jUf3x4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/signUp.js"],"names":["React","useState","useContext","UserContext","useHistory","axios","ErrorNotice","Register","username","setUsername","password","setPassword","passwordCheck","setPasswordCheck","error","setError","userData","setUserData","history","submit","e","preventDefault","newUser","post","loginRes","token","data","user","localStorage","setItem","push","err","response","msg","undefined","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport ErrorNotice from \"./misc/ErrorNotice\";\n\n  // Source:\n  // MERN Stack Tutorial with Auth (8 part series):\n  // https://www.youtube.com/watch?v=4_ZiJGY5F38\n\nexport default function Register(){\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [error, setError] = useState();\n\n  const {userData, setUserData} = useContext(UserContext);\n  const history = useHistory();\n\n  // function that submits info related to new user\n  const submit = async (e) => {\n    e.preventDefault();\n\n    try{\n      // newUser object is created\n      const newUser = {username, password, passwordCheck};\n      // calls post route to add new user to database\n      await axios.post(\n        \"http://localhost:5000/users/add\", \n        newUser\n      );\n      // user is logged in\n      const loginRes = await axios.post(\"http://localhost:5000/users/login\", {\n        username,\n        password,\n      });\n      // user data including auth token is set\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      // auth token is set in local storage\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n  } catch(err){\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n  // Sign Up form which takes in user input in fields \n    return(\n      <section>\n        <div className=\"container\">\n          <div className=\"user signinBx\" >\n            <div className=\"formBx\">\n              <form onSubmit={submit} >\n                <h2>Register</h2>\n                {error && (\n                  <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                \n                <input \n                type = \"text\" \n                required \n                placeholder=\"Username\" \n                onChange={(e) => setUsername(e.target.value)}\n                />\n\n                \n                <input \n                id=\"register-password\" \n                type = \"password\" \n                placeholder=\"Password\" \n                required\n                onChange={(e) => setPassword(e.target.value)}\n                />\n                \n                <input type = \"password\" \n                placeholder=\"Verify password\" \n                required\n                onChange={(e) => setPasswordCheck(e.target.value)}\n                />\n  \n                <input type= \"submit\" value=\"Register\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  } \n"]},"metadata":{},"sourceType":"module"}