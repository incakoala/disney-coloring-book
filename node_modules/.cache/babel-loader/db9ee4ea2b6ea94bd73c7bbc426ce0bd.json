{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n  _s();\n\n  const [image, setImage] = useState({});\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    setImage(props.userImage);\n  }, [props]);\n\n  const downloadImage = () => {\n    history.push(`/imageDownload/${image._id}`);\n  };\n\n  const deleteImage = async () => {\n    if (!userData.token) {\n      history.push(\"/userGallery\");\n      return;\n    }\n\n    swal({\n      title: \"Delete image?\",\n      text: \"This cannot be reversed.\",\n      buttons: true\n    }).then(async willDelete => {\n      if (willDelete) {\n        await axios.delete(`http://localhost:5000/user_images/${image._id}`, {\n          headers: {\n            \"x-auth-token\": userData.token\n          }\n        });\n      }\n    });\n  };\n\n  const editImage = () => {\n    history.push(`/coloringpage/${image._id}`);\n  };\n\n  const changePublicity = () => {\n    image.public === false ? image.public = true : image.public = false;\n    console.log(image.public);\n    setImage({ ...image\n    });\n\n    if (!userData.token) {\n      history.push(\"/userGallery\");\n      return;\n    }\n\n    swal({\n      title: \"Make image public?\",\n      text: \"Your image will be visible to everyone in the Showcase page.\",\n      buttons: true\n    }).then(async publicize => {\n      const response = await axios.patch(`http://localhost:5000/user_images/${image._id}`, image, {\n        headers: {\n          \"x-auth-token\": userData.token\n        }\n      });\n      console.log(image);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-card\",\n    children: image.component !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ColoredInImage, {\n        component: image.component,\n        size: props.size,\n        onFill: () => {},\n        fillColors: image.fill_colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"btn-group\",\n        id: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"download\",\n          onClick: () => downloadImage(),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"delete\",\n          onClick: () => deleteImage(),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"color-me\",\n          onClick: () => editImage(),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"public\",\n          onClick: () => changePublicity(),\n          children: \"Publicize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this) // <div className=\"col-4 mx-4 my-4 mt-auto\">\n  //     {image.component !== undefined ?\n  //             <>\n  //             <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n  //             <div class=\"btn-group\">\n  //                 <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n  //                 <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n  //                 <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n  //             </div>\n  //             </>\n  //         : <>Loading</>\n  //     }\n  // </div>\n  ;\n}\n\n_s(UserImageCard, \"AsQ5GF8ZB/Mo9twWKItmSNgc1Yc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserImageCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserImageCard\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/userImageCard.js"],"names":["React","useState","useEffect","useContext","useRef","useHistory","Link","UserContext","axios","swal","ColoredInImage","UserImageCard","props","image","setImage","userData","history","userImage","downloadImage","push","_id","deleteImage","token","title","text","buttons","then","willDelete","delete","headers","editImage","changePublicity","public","console","log","publicize","response","patch","component","undefined","size","fill_colors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport ColoredInImage from \"./images/coloredInImage\";\nexport default function UserImageCard(props) {\n    const [image, setImage] = useState({});\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        setImage(props.userImage)\n    }, [props])\n\n    const downloadImage = () => {\n        history.push(`/imageDownload/${image._id}`)\n    }\n\n    const deleteImage = async () => {\n        if (!userData.token) {\n            history.push(\"/userGallery\")\n            return\n        }\n        swal({\n            title: \"Delete image?\",\n            text: \"This cannot be reversed.\",\n            buttons: true\n        })\n            .then(async (willDelete) => {\n                if (willDelete) {\n                    await axios.delete(\n                        `http://localhost:5000/user_images/${image._id}`,\n                        { headers: { \"x-auth-token\": userData.token } },\n                    );\n                }\n            });\n    }\n\n    const editImage = () => {\n        history.push(`/coloringpage/${image._id}`)\n    }\n\n    const changePublicity = () => {\n        image.public === false ? image.public = true : image.public = false\n        console.log(image.public)\n\n        setImage ({\n            ...image\n        })\n\n        if (!userData.token) {\n            history.push(\"/userGallery\")\n            return\n        }\n        swal({\n            title: \"Make image public?\",\n            text: \"Your image will be visible to everyone in the Showcase page.\",\n            buttons: true\n        })\n        .then(async (publicize) => {\n            \n                const response = await axios.patch(\n                    `http://localhost:5000/user_images/${image._id}`,\n                    image,\n                    { headers: { \"x-auth-token\": userData.token } },\n                );\n                console.log(image);\n            \n        });\n    }\n\n    return (\n        <div className=\"image-card\">\n            {image.component !== undefined ?\n                <>\n                    <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n                    <div class=\"btn-group\" id=\"user\">\n                        <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n                        <button class=\"delete\" onClick={() => deleteImage()}>Delete</button>\n                        <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n                        <button class=\"public\" onClick={() => changePublicity()}>Publicize</button>\n                    </div>\n                </>\n                : <>Loading</>\n            }\n        </div>\n\n        // <div className=\"col-4 mx-4 my-4 mt-auto\">\n        //     {image.component !== undefined ?\n        //             <>\n        //             <ColoredInImage component={image.component} size={props.size} onFill={() => { }} fillColors={image.fill_colors} />\n        //             <div class=\"btn-group\">\n        //                 <button class=\"download\" onClick={() => downloadImage()}>Download</button>\n        //                 <button class=\"delete\" onClick={() => deleteImage(image._id)}>Delete</button>\n        //                 <button class=\"color-me\" onClick={() => editImage()}>Edit</button>\n        //             </div>\n        //             </>\n        //         : <>Loading</>\n        //     }\n        // </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}