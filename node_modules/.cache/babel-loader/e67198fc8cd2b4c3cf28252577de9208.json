{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/PopoverPicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nexport default function PopoverPicker(props) {\n  _s();\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"// \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-palette2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        // className=\"swatch\"\n        className: \"color-swatch\",\n        style: {\n          backgroundColor: props.currentColor\n        },\n        id: \"Popover1\",\n        onClick: () => toggle(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), popoverOpen && /*#__PURE__*/_jsxDEV(Popover, {\n        placement: \"bottom\",\n        isOpen: popoverOpen,\n        target: \"Popover1\",\n        toggle: toggle,\n        children: /*#__PURE__*/_jsxDEV(HexColorPicker, {\n          color: props.currentColor,\n          onChange: props.changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \"// \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PopoverPicker, \"r9jPo8Itcl3CH1RRAlp5f8wU2pw=\");\n\n_c = PopoverPicker;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverPicker\");","map":{"version":3,"sources":["/Users/Hilary/Documents/CodeProjects/project-disney_villains/src/components/PopoverPicker.js"],"names":["React","useCallback","useRef","useState","HexColorPicker","Button","Popover","PopoverHeader","PopoverBody","PopoverPicker","props","popoverOpen","setPopoverOpen","toggle","backgroundColor","currentColor","changeColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMU,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEA,sBACE;AAAA,mCACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BAED;AACE;AACA,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAE;AAAEG,UAAAA,eAAe,EAAEJ,KAAK,CAACK;AAAzB,SAHT;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,OAAO,EAAE,MAAMF,MAAM,CAAC,IAAD;AALvB;AAAA;AAAA;AAAA;AAAA,cAFC,EAUAF,WAAW,iBACV,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,MAAM,EAAEA,WAApC;AAAiD,QAAA,MAAM,EAAC,UAAxD;AAAmE,QAAA,MAAM,EAAEE,MAA3E;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEH,KAAK,CAACK,YAA7B;AAA2C,UAAA,QAAQ,EAAEL,KAAK,CAACM;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAAA,kBADF;AAqBD;;GAzBuBP,a;;KAAAA,a;AAyBvB","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nexport default function PopoverPicker(props){\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  return (\n    <>\n    // <div className=\"color-palette2\">\n    {/* <div className=\"picker\"> */}\n      <div\n        // className=\"swatch\"\n        className=\"color-swatch\"\n        style={{ backgroundColor: props.currentColor }}\n        id=\"Popover1\"\n        onClick={() => toggle(true)}\n      />\n\n      {popoverOpen && (\n        <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={toggle}>\n          <HexColorPicker color={props.currentColor} onChange={props.changeColor}/>\n        </Popover>\n    )}\n    \n    // </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}